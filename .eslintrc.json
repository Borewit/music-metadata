{
  "$schema": "https://json.schemastore.org/eslintrc",
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "extends": [
    // "eslint:recommended",
    // "plugin:@typescript-eslint/recommended",
    // "plugin:@typescript-eslint/recommended-requiring-type-checking",
    // "plugin:@typescript-eslint/strict",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsdoc/recommended",
    "plugin:unicorn/recommended",
    "prettier"
  ],
  "ignorePatterns": [
    "dest/**/*.d.ts",
    "**/*.js",
    "test/file-type/fixture/*",
    "test/peek-readable/resources/*",
    "test/strtok3/resources/*",
    "test/samples/**/*"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.eslint.json",
    "sourceType": "module"
  },
  "plugins": [
    "eslint-plugin-import",
    "eslint-plugin-jsdoc",
    "eslint-plugin-node",
    "eslint-plugin-unicorn",
    "@typescript-eslint"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": [
          "lib/tsconfig.json",
          "test/tsconfig.json",
          "doc-gen/tsconfig.json"
        ]
      }
    }
  },
  "rules": {
    /* eslint:recommended rules */
    /* https://github.com/eslint/eslint/blob/main/conf/eslint-recommended.js */
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    // "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-global-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    // "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unexpected-multiline": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": "error",
    "no-unused-labels": "error",
    // "no-unused-vars": "error",
    "no-useless-backreference": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-with": "error",
    "require-yield": "error",
    "use-isnan": "error",

    "arrow-parens": ["off", "as-needed"],
    "comma-dangle": "off",
    "complexity": "off",
    "curly": "off",
    "default-case": "off",
    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "dot-notation": "error",
    "eqeqeq": ["error", "smart"],
    "guard-for-in": "off",
    "id-denylist": [
      "error",
      "any",
      "Number",
      "number",
      "String",
      "string",
      "Boolean",
      "boolean",
      "Undefined",
      "undefined"
    ],
    "id-match": "error",
    "indent": "off",
    "max-classes-per-file": "off",
    "max-len": [
      "error",
      {
        "code": 200
      }
    ],
    "new-parens": "error",
    "no-bitwise": "off",
    "no-caller": "error",
    "no-constant-condition": ["error", { "checkLoops": false }],
    "no-console": "error",
    "no-duplicate-imports": "error",
    "no-eval": "error",
    "no-extra-bind": "error",
    "no-invalid-this": "off",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-return-await": "error",
    "no-sequences": "error",
    "no-shadow": "off",
    "no-template-curly-in-string": "error",
    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": "error",
    "no-unused-expressions": "error",
    "no-use-before-define": "off",
    "object-shorthand": "error",
    "one-var": ["error", "never"],
    "prefer-object-spread": "error",
    "quote-props": ["error", "as-needed"],
    "quotes": "off",
    "radix": "error",
    "semi": "error",
    "space-in-parens": ["error", "never"],
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": ["/"]
      }
    ],

    /* eslint-plugin-import */
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": false }
    ],
    "import/no-unresolved": ["error", { "caseSensitiveStrict": true }],

    /* eslint-plugin-jsdoc */
    "jsdoc/check-alignment": "error",
    "jsdoc/check-indentation": "error",
    "jsdoc/newline-after-description": ["error", "never"],
    "jsdoc/require-param-description": "off",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-property-type": "off",
    "jsdoc/require-returns-description": "off",
    "jsdoc/require-returns-type": "off",

    /* eslint-plugin-node */
    "node/file-extension-in-import": ["off"],
    "node/no-extraneous-import": "error",

    /* eslint-plugin-unicorn */
    "unicorn/filename-case": "off",
    "unicorn/no-nested-ternary": "off",
    "unicorn/no-null": "off",
    "unicorn/number-literal-case": "off",
    "unicorn/prefer-module": "off",
    "unicorn/prevent-abbreviations": "off",

    /* plugin:@typescript-eslint/eslint-recommended rules */
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/eslint-recommended.ts */
    "constructor-super": "off", // ts(2335) & ts(2377)
    "getter-return": "off", // ts(2378)
    "no-const-assign": "off", // ts(2588)
    "no-dupe-args": "off", // ts(2300)
    "no-dupe-class-members": "off", // ts(2393) & ts(2300)
    "no-dupe-keys": "off", // ts(1117)
    "no-func-assign": "off", // ts(2539)
    "no-import-assign": "off", // ts(2539) & ts(2540)
    "no-new-symbol": "off", // ts(2588)
    "no-obj-calls": "off", // ts(2349)
    "no-redeclare": "off", // ts(2451)
    "no-setter-return": "off", // ts(2408)
    "no-this-before-super": "off", // ts(2376)
    "no-undef": "off", // ts(2304)
    "no-unreachable": "off", // ts(7027)
    "no-unsafe-negation": "off", // ts(2365) & ts(2360) & ts(2358)
    "no-var": "error", // ts transpiles let/const to var, so no need for vars any more
    "prefer-const": "error", // ts provides better types with const
    "prefer-rest-params": "error", // ts provides better types with rest args over arguments
    "prefer-spread": "error", // ts transpiles spread to apply, so no need for manual apply
    "valid-typeof": "off", // ts(2367)

    /* plugin:@typescript-eslint/recommended rules */
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/recommended.ts */
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/ban-types": "error",
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",
    "no-empty-function": "off",
    // "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-empty-interface": "error",
    // "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "no-unused-vars": "off",
    // "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/triple-slash-reference": "error",

    /* plugin:@typescript-eslint/recommended-requiring-type-checking rules */
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/recommended-requiring-type-checking.ts */
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "no-implied-eval": "off",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    // "@typescript-eslint/no-unsafe-argument": "error",
    // "@typescript-eslint/no-unsafe-assignment": "error",
    // "@typescript-eslint/no-unsafe-call": "error",
    // "@typescript-eslint/no-unsafe-member-access": "error",
    // "@typescript-eslint/no-unsafe-return": "error",
    "require-await": "off",
    "@typescript-eslint/require-await": "error",
    // "@typescript-eslint/restrict-plus-operands": "error",
    // "@typescript-eslint/restrict-template-expressions": "error",
    // "@typescript-eslint/unbound-method": "error",

    /* plugin:@typescript-eslint/strict rules */
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/strict.ts */
    // "@typescript-eslint/array-type": "warn",
    // "@typescript-eslint/ban-tslint-comment": "warn",
    // "@typescript-eslint/class-literal-property-style": "warn",
    // "@typescript-eslint/consistent-indexed-object-style": "warn",
    // "@typescript-eslint/consistent-generic-constructors": "warn",
    // "@typescript-eslint/consistent-type-assertions": "warn",
    // "@typescript-eslint/consistent-type-definitions": "warn",
    // "dot-notation": "off",
    // "@typescript-eslint/dot-notation": "warn",
    // "@typescript-eslint/no-base-to-string": "warn",
    // "@typescript-eslint/no-confusing-non-null-assertion": "warn",
    // "@typescript-eslint/no-duplicate-enum-values": "warn",
    // "@typescript-eslint/no-dynamic-delete": "warn",
    // "@typescript-eslint/no-extraneous-class": "warn",
    // "@typescript-eslint/no-invalid-void-type": "warn",
    // "@typescript-eslint/no-meaningless-void-operator": "warn",
    // "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
    // "no-throw-literal": "off",
    // "@typescript-eslint/no-throw-literal": "warn",
    // "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
    // "@typescript-eslint/no-unnecessary-condition": "warn",
    // "@typescript-eslint/no-unnecessary-type-arguments": "warn",
    // "no-useless-constructor": "off",
    // "@typescript-eslint/no-useless-constructor": "warn",
    // "@typescript-eslint/non-nullable-type-assertion-style": "warn",
    // "@typescript-eslint/prefer-for-of": "warn",
    // "@typescript-eslint/prefer-function-type": "warn",
    // "@typescript-eslint/prefer-includes": "warn",
    // "@typescript-eslint/prefer-literal-enum-member": "warn",
    // "@typescript-eslint/prefer-nullish-coalescing": "warn",
    // "@typescript-eslint/prefer-optional-chain": "warn",
    // "@typescript-eslint/prefer-reduce-type-parameter": "warn",
    // "@typescript-eslint/prefer-return-this-type": "warn",
    // "@typescript-eslint/prefer-string-starts-ends-with": "warn",
    // "@typescript-eslint/prefer-ts-expect-error": "warn",
    // "@typescript-eslint/unified-signatures": "warn",

    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array"
      }
    ],
    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "@typescript-eslint/consistent-type-assertions": "error",
    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/indent": [
      "off",
      2,
      {
        "ObjectExpression": "first",
        "FunctionDeclaration": {
          "parameters": "first"
        },
        "FunctionExpression": {
          "parameters": "first"
        },
        "SwitchCase": 1
      }
    ],
    "@typescript-eslint/naming-convention": "off",
    /* Duplicate with "plugin:@typescript-eslint/recommended" */
    "@typescript-eslint/no-empty-function": [
      "error",
      { "allow": ["constructors"] }
    ],
    /* Duplicate with "plugin:@typescript-eslint/recommended" */
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-shadow": [
      "error",
      {
        "hoist": "all"
      }
    ],
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "@typescript-eslint/prefer-for-of": "off",
    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/semi": ["error", "always"],
    /* Duplicate with "plugin:@typescript-eslint/strict" */
    "@typescript-eslint/unified-signatures": "error"
  }
}
