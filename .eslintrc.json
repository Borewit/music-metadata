{
  "$schema": "https://json.schemastore.org/eslintrc",
  "env": {
    "browser": true,
    "node": true
  },
  "extends": [
    /* https://github.com/eslint/eslint/blob/main/conf/eslint-all.js */
    // "eslint:all",
    /* https://github.com/eslint/eslint/blob/main/conf/eslint-recommended.js */
    "eslint:recommended",
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/all.ts */
    // "plugin:@typescript-eslint/all",
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/base.ts */
    // "plugin:@typescript-eslint/base",
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/eslint-recommended.ts */
    // "plugin:@typescript-eslint/eslint-recommended",
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/recommended.ts */
    "plugin:@typescript-eslint/recommended",
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/recommended-requiring-type-checking.ts */
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    /* https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/strict.ts */
    "plugin:@typescript-eslint/strict",
    /* https://github.com/import-js/eslint-plugin-import/blob/main/config/recommended.js */
    "plugin:import/recommended",
    /* https://github.com/import-js/eslint-plugin-import/blob/main/config/typescript.js */
    "plugin:import/typescript",
    /* https://github.com/gajus/eslint-plugin-jsdoc/blob/master/src/index.js */
    "plugin:jsdoc/recommended",
    /* https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/configs/recommended.js */
    "plugin:unicorn/recommended",
    /* https://github.com/prettier/eslint-config-prettier/blob/main/index.js */
    "prettier"
  ],
  "ignorePatterns": [
    "dest/**/*.d.ts",
    "**/*.js",
    "test/file-type/fixture/*",
    "test/peek-readable/resources/*",
    "test/strtok3/resources/*",
    "test/samples/**/*"
  ],
  "parserOptions": {
    "project": "./tsconfig.eslint.json"
  },
  "plugins": ["eslint-plugin-node"],
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": [
          "lib/tsconfig.json",
          "test/tsconfig.json",
          "doc-gen/tsconfig.json"
        ]
      }
    }
  },
  "rules": {
    /* eslint */
    "arrow-parens": ["off", "as-needed"],
    "comma-dangle": "off",
    "complexity": "off",
    "curly": "off",
    "default-case": "off",
    "eqeqeq": ["error", "smart"],
    "guard-for-in": "off",
    "id-denylist": [
      "error",
      "any",
      "Number",
      "number",
      "String",
      "string",
      "Boolean",
      "boolean",
      "Undefined",
      "undefined"
    ],
    "id-match": "error",
    "indent": "off",
    "max-classes-per-file": "off",
    "max-len": [
      "error",
      {
        "code": 200
      }
    ],
    "new-parens": "error",
    "no-bitwise": "off",
    "no-caller": "error",
    "no-constant-condition": ["error", { "checkLoops": false }],
    "no-console": "error",
    "no-duplicate-imports": "error",
    "no-eval": "error",
    "no-extra-bind": "error",
    "no-invalid-this": "off",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-return-await": "error",
    "no-sequences": "error",
    "no-shadow": "off",
    "no-template-curly-in-string": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": "error",
    "no-unused-expressions": "error",
    "no-use-before-define": "off",
    "object-shorthand": "error",
    "one-var": ["error", "never"],
    "prefer-object-spread": "error",
    "quote-props": ["error", "as-needed"],
    "quotes": "off",
    "radix": "error",
    "semi": "error",
    "space-in-parens": ["error", "never"],
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": ["/"]
      }
    ],

    /* eslint-plugin-import */
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": false }
    ],
    "import/no-unresolved": ["error", { "caseSensitiveStrict": true }],

    /* eslint-plugin-jsdoc */
    "jsdoc/check-alignment": "error",
    "jsdoc/check-indentation": "error",
    "jsdoc/newline-after-description": ["error", "never"],
    "jsdoc/require-param-description": "off",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-property-type": "off",
    "jsdoc/require-returns-description": "off",
    "jsdoc/require-returns-type": "off",

    /* eslint-plugin-node */
    "node/file-extension-in-import": ["off"],
    "node/no-extraneous-import": "error",

    /* eslint-plugin-unicorn */
    "unicorn/filename-case": "off",
    "unicorn/no-nested-ternary": "off",
    "unicorn/no-null": "off",
    "unicorn/number-literal-case": "off",
    "unicorn/prefer-module": "off",
    "unicorn/prevent-abbreviations": "off",

    /* @typescript-eslint/eslint-plugin */
    "@typescript-eslint/indent": [
      "off",
      2,
      {
        "ObjectExpression": "first",
        "FunctionDeclaration": {
          "parameters": "first"
        },
        "FunctionExpression": {
          "parameters": "first"
        },
        "SwitchCase": 1
      }
    ],
    "@typescript-eslint/naming-convention": "off",
    /* Duplicate with "plugin:@typescript-eslint/recommended" */
    "@typescript-eslint/no-empty-function": [
      "error",
      { "allow": ["constructors"] }
    ],
    /* Duplicate with "plugin:@typescript-eslint/recommended" */
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-shadow": [
      "error",
      {
        "hoist": "all"
      }
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "off",
    "@typescript-eslint/no-unnecessary-condition": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      { "allowBoolean": true }
    ],
    "@typescript-eslint/semi": ["error", "always"]
  }
}
