import { test, expect, describe } from "vitest";

import { BufferTokenizer } from "../../../strtok3/BufferTokenizer";
import { u8 } from "../../primitive/integer";
import { readUnitFromTokenizer } from "../../utility/read-unit";
import { Id3v1Header, id3v1Header } from "../header";

test("ID3v1 header size = 128", () => {
  const [size] = id3v1Header;

  expect(size).toBe(128);
});

type Case = [description: string, source: number[], expected: Id3v1Header];
const cases: Case[] = [
  [
    "parse ID3v1 header",
    [
      // header
      0x54, 0x41, 0x47,
      // title
      0x54, 0x68, 0x65, 0x20, 0x53, 0x6f, 0x6e, 0x67, 0x00, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // artist
      0x54, 0x68, 0x65, 0x20, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x00, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // album
      0x54, 0x68, 0x65, 0x20, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x00, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // year
      0x31, 0x32, 0x33, 0x34,
      // comment
      0x48, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x72,
      0x65, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
      // genre
      0x0f,
    ],
    {
      header: "TAG",
      title: "The Song",
      artist: "The Singer",
      album: "The Record",
      year: "1234",
      comment: "Here is comment.Here is commen",
      zeroByte: 0x65,
      track: 0x6e,
      genre: 15,
    },
  ],
  [
    "parse ID3v1.1 header 0x00 separator and track",
    [
      // header
      0x54, 0x41, 0x47,
      // title
      0x54, 0x68, 0x65, 0x20, 0x53, 0x6f, 0x6e, 0x67, 0x00, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // artist
      0x54, 0x68, 0x65, 0x20, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x00, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // album
      0x54, 0x68, 0x65, 0x20, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x00, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // year
      0x31, 0x32, 0x33, 0x34,
      // comment
      0x48, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x72,
      0x65, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x6d,
      // zero byte separator
      0x00,
      // track
      0x10,
      // genre
      0x0f,
    ],
    {
      header: "TAG",
      title: "The Song",
      artist: "The Singer",
      album: "The Record",
      year: "1234",
      comment: "Here is comment.Here is comm",
      zeroByte: 0,
      track: 16,
      genre: 15,
    },
  ],
  [
    "header is not 'TAG'",
    [
      // header
      0x41, 0x41, 0x41,
      // title
      0x54, 0x68, 0x65, 0x20, 0x53, 0x6f, 0x6e, 0x67, 0x00, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // artist
      0x54, 0x68, 0x65, 0x20, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x00, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // album
      0x54, 0x68, 0x65, 0x20, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x00, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54,
      0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47, 0x54, 0x41, 0x47,
      // year
      0x31, 0x32, 0x33, 0x34,
      // comment
      0x48, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x72,
      0x65, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x6d,
      // zero byte separator
      0x00,
      // track
      0x10,
      // genre
      0x0f,
    ],
    {
      header: "AAA",
      title: "The Song",
      artist: "The Singer",
      album: "The Record",
      year: "1234",
      comment: "Here is comment.Here is comm",
      zeroByte: 0,
      track: 16,
      genre: 15,
    },
  ],
];

describe("unit: ID3v1 header", () => {
  test.each(cases)("%s", async (_, bytes, expected) => {
    const buffer = new Uint8Array(bytes);
    const tokenizer = new BufferTokenizer(buffer);
    const result = readUnitFromTokenizer(tokenizer, id3v1Header);

    await expect(result).resolves.toEqual(expected);

    // all bytes are read
    await expect(readUnitFromTokenizer(tokenizer, u8)).rejects.toThrow();
  });
});
