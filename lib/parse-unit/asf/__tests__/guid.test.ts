import { test, expect, describe } from "vitest";

import { BufferTokenizer } from "../../../strtok3/BufferTokenizer";
import { u8 } from "../../primitive/integer";
import { readUnitFromTokenizer } from "../../utility/read-unit";
import {
  AdvancedContentEncryptionObject,
  AdvancedMutualExclusionObject,
  ASF_Index_Placeholder_Object,
  AudioMedia,
  BandwidthSharingObject,
  BinaryMedia,
  BitrateMutualExclusionObject,
  CodecListObject,
  CommandMedia,
  CompatibilityObject,
  ContentBrandingObject,
  ContentDescriptionObject,
  ContentEncryptionObject,
  DataObject,
  Degradable_JPEG_Media,
  DigitalSignatureObject,
  ErrorCorrectionObject,
  ExtendedContentDescriptionObject,
  ExtendedContentEncryptionObject,
  ExtendedStreamPropertiesObject,
  FilePropertiesObject,
  FileTransferMedia,
  GroupMutualExclusionObject,
  GUID,
  guid,
  HeaderExtensionObject,
  HeaderObject,
  IndexObject,
  IndexParametersObject,
  JFIF_Media,
  LanguageListObject,
  MarkerObject,
  MediaObjectIndexObject,
  MediaObjectIndexParametersObject,
  MetadataLibraryObject,
  MetadataObject,
  PaddingObject,
  ScriptCommandObject,
  SimpleIndexObject,
  StreamBitratePropertiesObject,
  StreamPrioritizationObject,
  StreamPropertiesObject,
  TimecodeIndexObject,
  TimecodeIndexParametersObject,
  VideoMedia,
} from "../guid";

describe("GUID class", () => {
  test("str property", () => {
    const guidStr = "B503BF5F-2EA9-CF11-8EE3-00C00C205365";
    const result = guidStr;

    expect(result).toBe(guidStr);
  });
});

describe("unit size: GUID", () => {
  test("GUID size = 16", () => {
    const [size] = guid;

    expect(size).toBe(16);
  });
});

type Case = [description: string, source: number[], expected: GUID];
const cases: Case[] = [
  [
    "parse GUID",
    [0xaa, 0xbb, 0xcc, 0xdd, 0x11, 0x22, 0x44, 0x55, 0x0f, 0x1e, 0x2d, 0x3c, 0x4b, 0x5a, 0x69, 0x78],
    "DDCCBBAA-2211-5544-0F1E-2D3C4B5A6978" as GUID,
  ],
  [
    "header object",
    [0x30, 0x26, 0xb2, 0x75, 0x8e, 0x66, 0xcf, 0x11, 0xa6, 0xd9, 0x00, 0xaa, 0x00, 0x62, 0xce, 0x6c],
    HeaderObject,
  ],
  [
    "data object",
    [0x36, 0x26, 0xb2, 0x75, 0x8e, 0x66, 0xcf, 0x11, 0xa6, 0xd9, 0x00, 0xaa, 0x00, 0x62, 0xce, 0x6c],
    DataObject,
  ],
  [
    "simple index object",
    [0x90, 0x08, 0x00, 0x33, 0xb1, 0xe5, 0xcf, 0x11, 0x89, 0xf4, 0x00, 0xa0, 0xc9, 0x03, 0x49, 0xcb],
    SimpleIndexObject,
  ],
  [
    "index object",
    [0xd3, 0x29, 0xe2, 0xd6, 0xda, 0x35, 0xd1, 0x11, 0x90, 0x34, 0x00, 0xa0, 0xc9, 0x03, 0x49, 0xbe],
    IndexObject,
  ],
  [
    "media object index object",
    [0xf8, 0x03, 0xb1, 0xfe, 0xad, 0x12, 0x64, 0x4c, 0x84, 0x0f, 0x2a, 0x1d, 0x2f, 0x7a, 0xd4, 0x8c],
    MediaObjectIndexObject,
  ],
  [
    "timecode index object",
    [0xd0, 0x3f, 0xb7, 0x3c, 0x4a, 0x0c, 0x03, 0x48, 0x95, 0x3d, 0xed, 0xf7, 0xb6, 0x22, 0x8f, 0x0c],
    TimecodeIndexObject,
  ],

  [
    "file properties object",
    [0xa1, 0xdc, 0xab, 0x8c, 0x47, 0xa9, 0xcf, 0x11, 0x8e, 0xe4, 0x00, 0xc0, 0x0c, 0x20, 0x53, 0x65],
    FilePropertiesObject,
  ],
  [
    "stream properties object",
    [0x91, 0x07, 0xdc, 0xb7, 0xb7, 0xa9, 0xcf, 0x11, 0x8e, 0xe6, 0x00, 0xc0, 0x0c, 0x20, 0x53, 0x65],
    StreamPropertiesObject,
  ],
  [
    "header extension object",
    [0xb5, 0x03, 0xbf, 0x5f, 0x2e, 0xa9, 0xcf, 0x11, 0x8e, 0xe3, 0x00, 0xc0, 0x0c, 0x20, 0x53, 0x65],
    HeaderExtensionObject,
  ],
  [
    "codec list object",
    [0x40, 0x52, 0xd1, 0x86, 0x1d, 0x31, 0xd0, 0x11, 0xa3, 0xa4, 0x00, 0xa0, 0xc9, 0x03, 0x48, 0xf6],
    CodecListObject,
  ],
  [
    "script command object",
    [0x30, 0x1a, 0xfb, 0x1e, 0x62, 0x0b, 0xd0, 0x11, 0xa3, 0x9b, 0x00, 0xa0, 0xc9, 0x03, 0x48, 0xf6],
    ScriptCommandObject,
  ],
  [
    "marker object",
    [0x01, 0xcd, 0x87, 0xf4, 0x51, 0xa9, 0xcf, 0x11, 0x8e, 0xe6, 0x00, 0xc0, 0x0c, 0x20, 0x53, 0x65],
    MarkerObject,
  ],
  [
    "bitrate mutual exclusion object",
    [0xdc, 0x29, 0xe2, 0xd6, 0xda, 0x35, 0xd1, 0x11, 0x90, 0x34, 0x00, 0xa0, 0xc9, 0x03, 0x49, 0xbe],
    BitrateMutualExclusionObject,
  ],
  [
    "error correction object",
    [0x35, 0x26, 0xb2, 0x75, 0x8e, 0x66, 0xcf, 0x11, 0xa6, 0xd9, 0x00, 0xaa, 0x00, 0x62, 0xce, 0x6c],
    ErrorCorrectionObject,
  ],
  [
    "content description object",
    [0x33, 0x26, 0xb2, 0x75, 0x8e, 0x66, 0xcf, 0x11, 0xa6, 0xd9, 0x00, 0xaa, 0x00, 0x62, 0xce, 0x6c],
    ContentDescriptionObject,
  ],
  [
    "extended content description object",
    [0x40, 0xa4, 0xd0, 0xd2, 0x07, 0xe3, 0xd2, 0x11, 0x97, 0xf0, 0x00, 0xa0, 0xc9, 0x5e, 0xa8, 0x50],
    ExtendedContentDescriptionObject,
  ],
  [
    "content branding object",
    [0xfa, 0xb3, 0x11, 0x22, 0x23, 0xbd, 0xd2, 0x11, 0xb4, 0xb7, 0x00, 0xa0, 0xc9, 0x55, 0xfc, 0x6e],
    ContentBrandingObject,
  ],
  [
    "stream bitrate properties object",
    [0xce, 0x75, 0xf8, 0x7b, 0x8d, 0x46, 0xd1, 0x11, 0x8d, 0x82, 0x00, 0x60, 0x97, 0xc9, 0xa2, 0xb2],
    StreamBitratePropertiesObject,
  ],
  [
    "content encryption object",
    [0xfb, 0xb3, 0x11, 0x22, 0x23, 0xbd, 0xd2, 0x11, 0xb4, 0xb7, 0x00, 0xa0, 0xc9, 0x55, 0xfc, 0x6e],
    ContentEncryptionObject,
  ],
  [
    "extended content encryption object",
    [0x14, 0xe6, 0x8a, 0x29, 0x22, 0x26, 0x17, 0x4c, 0xb9, 0x35, 0xda, 0xe0, 0x7e, 0xe9, 0x28, 0x9c],
    ExtendedContentEncryptionObject,
  ],
  [
    "digital signature object",
    [0xfc, 0xb3, 0x11, 0x22, 0x23, 0xbd, 0xd2, 0x11, 0xb4, 0xb7, 0x00, 0xa0, 0xc9, 0x55, 0xfc, 0x6e],
    DigitalSignatureObject,
  ],
  [
    "padding object",
    [0x74, 0xd4, 0x06, 0x18, 0xdf, 0xca, 0x09, 0x45, 0xa4, 0xba, 0x9a, 0xab, 0xcb, 0x96, 0xaa, 0xe8],
    PaddingObject,
  ],

  [
    "extended stream properties object",
    [0xcb, 0xa5, 0xe6, 0x14, 0x72, 0xc6, 0x32, 0x43, 0x83, 0x99, 0xa9, 0x69, 0x52, 0x06, 0x5b, 0x5a],
    ExtendedStreamPropertiesObject,
  ],
  [
    "advanced mutual exclusion object",
    [0xcf, 0x49, 0x86, 0xa0, 0x75, 0x47, 0x70, 0x46, 0x8a, 0x16, 0x6e, 0x35, 0x35, 0x75, 0x66, 0xcd],
    AdvancedMutualExclusionObject,
  ],
  [
    "group mutual exclusion object",
    [0x40, 0x5a, 0x46, 0xd1, 0x79, 0x5a, 0x38, 0x43, 0xb7, 0x1b, 0xe3, 0x6b, 0x8f, 0xd6, 0xc2, 0x49],
    GroupMutualExclusionObject,
  ],
  [
    "stream prioritization object",
    [0x5b, 0xd1, 0xfe, 0xd4, 0xd3, 0x88, 0x4f, 0x45, 0x81, 0xf0, 0xed, 0x5c, 0x45, 0x99, 0x9e, 0x24],
    StreamPrioritizationObject,
  ],
  [
    "bandwidth sharing object",
    [0xe6, 0x09, 0x96, 0xa6, 0x7b, 0x51, 0xd2, 0x11, 0xb6, 0xaf, 0x00, 0xc0, 0x4f, 0xd9, 0x08, 0xe9],
    BandwidthSharingObject,
  ],
  [
    "language list object",
    [0xa9, 0x46, 0x43, 0x7c, 0xe0, 0xef, 0xfc, 0x4b, 0xb2, 0x29, 0x39, 0x3e, 0xde, 0x41, 0x5c, 0x85],
    LanguageListObject,
  ],
  [
    "metadata object",
    [0xea, 0xcb, 0xf8, 0xc5, 0xaf, 0x5b, 0x77, 0x48, 0x84, 0x67, 0xaa, 0x8c, 0x44, 0xfa, 0x4c, 0xca],
    MetadataObject,
  ],
  [
    "metadata library object",
    [0x94, 0x1c, 0x23, 0x44, 0x98, 0x94, 0xd1, 0x49, 0xa1, 0x41, 0x1d, 0x13, 0x4e, 0x45, 0x70, 0x54],
    MetadataLibraryObject,
  ],
  [
    "index parameters object",
    [0xdf, 0x29, 0xe2, 0xd6, 0xda, 0x35, 0xd1, 0x11, 0x90, 0x34, 0x00, 0xa0, 0xc9, 0x03, 0x49, 0xbe],
    IndexParametersObject,
  ],
  [
    "media object index parameters object",
    [0xad, 0x3b, 0x20, 0x6b, 0x11, 0x3f, 0xe4, 0x48, 0xac, 0xa8, 0xd7, 0x61, 0x3d, 0xe2, 0xcf, 0xa7],
    MediaObjectIndexParametersObject,
  ],
  [
    "timecode index parameters object",
    [0x6d, 0x49, 0x5e, 0xf5, 0x97, 0x97, 0x5d, 0x4b, 0x8c, 0x8b, 0x60, 0x4d, 0xfe, 0x9b, 0xfb, 0x24],
    TimecodeIndexParametersObject,
  ],
  [
    "compatibility object",
    [0x5d, 0x8b, 0xf1, 0x26, 0x84, 0x45, 0xec, 0x47, 0x9f, 0x5f, 0x0e, 0x65, 0x1f, 0x04, 0x52, 0xc9],
    CompatibilityObject,
  ],
  [
    "advanced content encryption object",
    [0x33, 0x85, 0x05, 0x43, 0x81, 0x69, 0xe6, 0x49, 0x9b, 0x74, 0xad, 0x12, 0xcb, 0x86, 0xd5, 0x8c],
    AdvancedContentEncryptionObject,
  ],

  [
    "audio media",
    [0x40, 0x9e, 0x69, 0xf8, 0x4d, 0x5b, 0xcf, 0x11, 0xa8, 0xfd, 0x00, 0x80, 0x5f, 0x5c, 0x44, 0x2b],
    AudioMedia,
  ],
  [
    "video media",
    [0xc0, 0xef, 0x19, 0xbc, 0x4d, 0x5b, 0xcf, 0x11, 0xa8, 0xfd, 0x00, 0x80, 0x5f, 0x5c, 0x44, 0x2b],
    VideoMedia,
  ],
  [
    "command media",
    [0xc0, 0xcf, 0xda, 0x59, 0xe6, 0x59, 0xd0, 0x11, 0xa3, 0xac, 0x00, 0xa0, 0xc9, 0x03, 0x48, 0xf6],
    CommandMedia,
  ],
  [
    "JFIF media",
    [0x00, 0xe1, 0x1b, 0xb6, 0x4e, 0x5b, 0xcf, 0x11, 0xa8, 0xfd, 0x00, 0x80, 0x5f, 0x5c, 0x44, 0x2b],
    JFIF_Media,
  ],
  [
    "degradable JPEG media",
    [0xe0, 0x7d, 0x90, 0x35, 0x15, 0xe4, 0xcf, 0x11, 0xa9, 0x17, 0x00, 0x80, 0x5f, 0x5c, 0x44, 0x2b],
    Degradable_JPEG_Media,
  ],
  [
    "file transfer media",
    [0x2c, 0x22, 0xbd, 0x91, 0x1c, 0xf2, 0x7a, 0x49, 0x8b, 0x6d, 0x5a, 0xa8, 0x6b, 0xfc, 0x01, 0x85],
    FileTransferMedia,
  ],
  [
    "binary media",
    [0xe2, 0x65, 0xfb, 0x3a, 0xef, 0x47, 0xf2, 0x40, 0xac, 0x2c, 0x70, 0xa9, 0x0d, 0x71, 0xd3, 0x43],
    BinaryMedia,
  ],

  [
    "ASF index placeholder object",
    [0x20, 0xde, 0xaa, 0xd9, 0x17, 0x7c, 0x9c, 0x4f, 0xbc, 0x28, 0x85, 0x55, 0xdd, 0x98, 0xe2, 0xa2],
    ASF_Index_Placeholder_Object,
  ],
];

describe("unit: GUID", () => {
  test.each(cases)("%s", async (_, bytes, expected) => {
    const buffer = new Uint8Array(bytes);
    const tokenizer = new BufferTokenizer(buffer);
    const result = readUnitFromTokenizer(tokenizer, guid);

    await expect(result).resolves.toEqual(expected);

    // all bytes are read
    await expect(readUnitFromTokenizer(tokenizer, u8)).rejects.toThrow();
  });
});
